// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Verify ChangeOrderStateModal renders correctly 1`] = `
<Styled(Modal)
  backdrop="static"
  keyboard={false}
  onHide={[Function]}
  show={true}
  size="sm"
>
  <ModalHeader
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle>
      Manage Instantiation
    </ModalTitle>
  </ModalHeader>
  <div
    style={
      Object {
        "padding": "5px 5px 0 5px",
      }
    }
  >
    <ModalBody>
      <Container
        fluid={false}
      >
        <Dropdown
          navbar={false}
          onSelect={[Function]}
        >
          <DropdownToggle
            id="dropdown-basic"
            variant="dark"
          >
            Select Order State
          </DropdownToggle>
          <DropdownMenu
            align="left"
            alignRight={false}
            flip={true}
          >
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              eventKey="UNINITIALISED"
            >
              UNINITIALISED
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              eventKey="PASSIVE"
            >
              PASSIVE
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              eventKey="RUNNING"
            >
              RUNNING
            </DropdownItem>
          </DropdownMenu>
        </Dropdown>
      </Container>
      <Styled(Alert)
        show={false}
        variant="danger"
      >
        Can't get instantiation ordered state:
        <br />
        {}
      </Styled(Alert)>
    </ModalBody>
    <styled.div />
  </div>
  <ModalFooter>
    <Button
      active={false}
      disabled={false}
      onClick={[Function]}
      variant="primary"
    >
      Save
    </Button>
    <Button
      active={false}
      disabled={false}
      onClick={[Function]}
      variant="secondary"
    >
      Close
    </Button>
  </ModalFooter>
</Styled(Modal)>
`;
