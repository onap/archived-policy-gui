// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Verify ManageDictionaries Test API Successful 1`] = `
<Styled(Modal)
  backdrop="static"
  keyboard={false}
  onHide={[Function]}
  show={true}
  size="xl"
>
  <ModalHeader
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle>
      Manage Dictionaries
    </ModalTitle>
  </ModalHeader>
  <ModalBody>
    <WithStyles(Component)
      columns={
        Array [
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "editable": "onAdd",
            "field": "name",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Dictionary Name",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "secondLevelDictionary",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "lookup": Object {
              "0": "No",
              "1": "Yes",
            },
            "title": "Sub Dictionary ?",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "field": "subDictionaryType",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "lookup": Object {
              "number": "number",
              "string": "string",
            },
            "title": "Dictionary Type",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "editable": "never",
            "field": "updatedBy",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Updated By",
          },
          Object {
            "cellStyle": Object {
              "border": "1px solid black",
            },
            "editable": "never",
            "field": "updatedDate",
            "headerStyle": Object {
              "backgroundColor": "#ddd",
              "border": "2px solid black",
            },
            "title": "Last Updated Date",
          },
        ]
      }
      editable={
        Object {
          "onRowAdd": [Function],
          "onRowDelete": [Function],
          "onRowUpdate": [Function],
        }
      }
      icons={
        Object {
          "Add": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "Check": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "Clear": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "Delete": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "DetailPanel": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "Edit": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "Export": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "Filter": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "FirstPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "LastPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "NextPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "PreviousPage": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "ResetSearch": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "Search": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "SortArrow": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "ThirdStateCheck": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "ViewColumn": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
        }
      }
      onRowClick={[Function]}
      options={
        Object {
          "headerStyle": Object {
            "backgroundColor": "#ddd",
            "border": "1px solid black",
            "fontSize": "15pt",
            "text": "bold",
          },
        }
      }
      title="Dictionary List"
    />
  </ModalBody>
  <ModalFooter>
    <Button
      active={false}
      disabled={false}
      onClick={[Function]}
      type="null"
      variant="secondary"
    >
      Close
    </Button>
  </ModalFooter>
</Styled(Modal)>
`;
