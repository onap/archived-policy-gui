<!--
  ============LICENSE_START=======================================================
   Copyright (C) 2018 Ericsson. All rights reserved.
   Modifications Copyright (C) 2019-2022 Nordix Foundation.
   Modifications Copyright (C) 2020 Bell Canada.
   Modifications Copyright (C) 2021 AT&T Intellectual Property. All rights reserved.
  ================================================================================
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  SPDX-License-Identifier: Apache-2.0
  ============LICENSE_END=========================================================
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.onap.policy.gui.editors</groupId>
        <artifactId>editors</artifactId>
        <version>2.2.2</version>
    </parent>

    <artifactId>gui-editor-apex</artifactId>
    <name>${project.artifactId}</name>
    <description>Web client for editing Apex policies</description>

    <properties>
        <webapp.dir>${project.basedir}/src/main/webapp</webapp.dir>
        <sonar.nodejs.executable>${webapp.dir}/node/node</sonar.nodejs.executable>
        <sonar.sources>${project.basedir}/src/main/java,${webapp.dir}/js</sonar.sources>
        <sonar.exclusions>**/*.test.js</sonar.exclusions>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.onap.policy.common</groupId>
            <artifactId>utils</artifactId>
            <version>${policy.common.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.worldturner.medeia</groupId>
                    <artifactId>medeia-validator-gson</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.models</groupId>
            <artifactId>policy-models-tosca</artifactId>
            <version>${policy.models.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.json</groupId>
                    <artifactId>json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.apex-pdp.model</groupId>
            <artifactId>model</artifactId>
            <version>${policy.apex-pdp.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-ext</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.11.3</version>
                <configuration>
                    <nodeVersion>v14.17.0</nodeVersion>
                    <npmVersion>6.14.5</npmVersion>
                    <installDirectory>${webapp.dir}</installDirectory>
                    <workingDirectory>${webapp.dir}</workingDirectory>
                    <npmDownloadRoot>${repo.npm}</npmDownloadRoot>
                </configuration>
                <executions>
                    <execution>
                        <id>install node</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                        <phase>generate-resources</phase>
                    </execution>
                    <execution>
                        <id>npm test</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>test</arguments>
                        </configuration>
                        <phase>test</phase>
                    </execution>
                    <execution>
                        <id>webpack build</id>
                        <goals>
                            <goal>webpack</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy frontend resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes/static</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${webapp.dir}/dist</directory>
                                </resource>
                                <resource>
                                    <directory>${webapp.dir}</directory>
                                    <includes>
                                        <include>js/fileMenu.js</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${webapp.dir}/node</directory>
                        </fileset>
                        <fileset>
                            <directory>${webapp.dir}/node_modules</directory>
                        </fileset>
                        <fileset>
                            <directory>${webapp.dir}</directory>
                            <includes>
                                <include>package-lock.json</include>
                                <include>dist/bundle.js</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <!-- By default, the repackage goal replaces the original artifact with the repackaged one.
                                 By specifying a classifier here, we can retain both the original and repackaged jars.
                                 Thus two jars are produced: a regular jar that we can include in other modules, and an
                                 executable Spring Boot jar with the suffix 'exec'. -->
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
